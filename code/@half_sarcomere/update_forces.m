function update_forces(obj, time_step, delta_hsl)

if (startsWith(obj.kinetic_scheme, '2state'))
    bin_pops = obj.myofilaments.y(1+(1:obj.myofilaments.no_of_x_bins));
    obj.cb_stress = ...
            obj.parameters.cb_number_density *  ...
                obj.parameters.k_cb * 1e-9 * ...
                sum((obj.myofilaments.x + obj.parameters.x_ps) .* ...
                    bin_pops');
end

if (startsWith(obj.kinetic_scheme, '3state_with_SRX'))
    bin_pops = obj.myofilaments.y(2+(1:obj.myofilaments.no_of_x_bins));
    obj.cb_stress = ...
            obj.parameters.cb_number_density *  ...
                obj.parameters.k_cb * 1e-9 * ...
                sum((obj.myofilaments.x + obj.parameters.x_ps) .* ...
                    bin_pops');
end

if (startsWith(obj.kinetic_scheme, '4state_with_SRX'))
    M3_indices = 2+(1:obj.myofilaments.no_of_x_bins);
    M4_indices = (2+obj.myofilaments.no_of_x_bins) + ...
        (1:obj.myofilaments.no_of_x_bins);

    M3 = obj.myofilaments.y(M3_indices);
    M4 = obj.myofilaments.y(M4_indices);

    obj.cb_stress = ...
        obj.parameters.cb_number_density * ...
            obj.parameters.k_cb * 1e-9 * ...
            (sum(obj.myofilaments.x .* M3') + ...
                sum((obj.myofilaments.x + obj.parameters.x_ps) .* M4'));
end

[obj.intracellular_passive_stress, obj.extracellular_passive_stress] = ...
    obj.return_passive_forces(obj.hs_length);

% Calculate myofibrillar stress as sum of cb_stress and intracellular
% passive stress
obj.myofibrillar_stress = obj.cb_stress + obj.intracellular_passive_stress;

obj.viscous_stress = obj.parameters.viscosity * delta_hsl / time_step;

% Now that you have the stresses, calculate the forces allowing for
% the different cross-sectional areas

obj.cb_force = (1.0 - obj.parameters.prop_fibrosis) * ...
                    obj.parameters.prop_myofilaments * ...
                        obj.cb_stress;

obj.intracellular_passive_force = (1.0 - obj.parameters.prop_fibrosis) * ...
                    obj.parameters.prop_myofilaments * ...
                        obj.intracellular_passive_stress;
                   
obj.viscous_force = (1.0 - obj.parameters.prop_fibrosis) * ...
                     obj.parameters.prop_myofilaments * ...
                        obj.viscous_stress;
                    
obj.extracellular_passive_force = obj.parameters.prop_fibrosis * ...
                    obj.extracellular_passive_stress;

% Add up the forces to get the true force
obj.hs_force = obj.cb_force + obj.intracellular_passive_force + ...
                obj.viscous_force + obj.extracellular_passive_force;
           